defmodule Moba.Admin do
  @moduledoc """
  Top-level domain for the admin panel, mostly generated by Torch
  """

  alias Moba.Admin
  alias Admin.{Skills, Items, Avatars, Matches, Users, Server, Skins, Quests, Duels}

  # SKILLS

  def paginate_skills(params \\ %{}), do: Skills.paginate(params)

  def list_skills, do: Skills.list()

  def get_skill!(id), do: Skills.get!(id)

  def create_skill(attrs \\ %{}), do: Skills.create(attrs)

  def update_skill(skill, attrs), do: Skills.update(skill, attrs)

  def delete_skill(skill), do: Skills.delete(skill)

  def change_skill(skill), do: Skills.change(skill)

  def skills_with_same_code(code), do: Skills.list_with_same_code(code)

  # ITEMS

  def paginate_items(params \\ %{}), do: Items.paginate(params)

  def list_items, do: Items.list()

  def get_item!(id), do: Items.get!(id)

  def create_item(attrs \\ %{}), do: Items.create(attrs)

  def update_item(item, attrs), do: Items.update(item, attrs)

  def delete_item(item), do: Items.delete(item)

  def change_item(item), do: Items.change(item)

  # AVATARS

  def paginate_avatars(params \\ %{}), do: Avatars.paginate(params)

  def list_avatars, do: Avatars.list()

  def get_avatar!(id), do: Avatars.get!(id)

  def create_avatar(attrs \\ %{}), do: Avatars.create(attrs)

  def update_avatar(avatar, attrs), do: Avatars.update(avatar, attrs)

  def delete_avatar(avatar), do: Avatars.delete(avatar)

  def change_avatar(avatar), do: Avatars.change(avatar)

  # USERS

  def paginate_users(params \\ %{}), do: Users.paginate(params)

  def list_users, do: Users.list()

  def get_user!(id), do: Users.get!(id)

  def create_user(attrs \\ %{}), do: Users.create(attrs)

  def update_user(user, attrs), do: Users.update(user, attrs)

  def delete_user(user), do: Users.delete(user)

  def change_user(user), do: Users.change(user)

  def get_user_stats, do: Users.get_stats()

  # MATCHES

  def paginate_matches(params \\ %{}), do: Matches.paginate(params)

  def list_matches, do: Matches.list()

  def list_recent_matches, do: Matches.list_recent()

  def get_match!(id), do: Matches.get!(id)

  def update_match(match, attrs), do: Matches.update(match, attrs)

  def change_match(match), do: Matches.change(match)

  def get_server_data(match), do: Server.get_data(match)

  defdelegate recent_winrates(match_time), to: Matches

  defdelegate current_active_players, to: Matches

  # SKINS

  def paginate_skins(params \\ %{}), do: Skins.paginate(params)

  def list_skins, do: Skins.list()

  def get_skin!(id), do: Skins.get!(id)

  def create_skin(attrs \\ %{}), do: Skins.create(attrs)

  def update_skin(skin, attrs), do: Skins.update(skin, attrs)

  def delete_skin(skin), do: Skins.delete(skin)

  def change_skin(skin), do: Skins.change(skin)

  # QUESTS

  def paginate_quests(params \\ %{}), do: Quests.paginate(params)

  def list_quests, do: Quests.list()

  def get_quest!(id), do: Quests.get!(id)

  def create_quest(attrs \\ %{}), do: Quests.create(attrs)

  def update_quest(quest, attrs), do: Quests.update(quest, attrs)

  def delete_quest(quest), do: Quests.delete(quest)

  def change_quest(quest), do: Quests.change(quest)

  # DUELS

  def list_recent_duels, do: Duels.list_recent()
end
